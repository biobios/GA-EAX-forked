# MIT License

# Copyright (c) 2025 BioBIOS

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

PROJECT_NAME=$(subst $(ROOT_DIR)/src/,,$(shell pwd))
SRCS=$(wildcard *.cpp)
OBJS=$(patsubst %.cpp,$(ROOT_DIR)/temp/$(PROJECT_NAME)/%.o,$(SRCS))
DEBUG_OBJS=$(patsubst %.cpp,$(ROOT_DIR)/temp/debug/$(PROJECT_NAME)/%.o,$(SRCS))
PROF_OBJS=$(patsubst %.cpp,$(ROOT_DIR)/temp/prof/$(PROJECT_NAME)/%.o,$(SRCS))
TARGET=$(ROOT_DIR)/bin/$(PROJECT_NAME)
DEBUG_TARGET=$(ROOT_DIR)/bin/debug/$(PROJECT_NAME)
PROF_TARGET=$(ROOT_DIR)/bin/prof/$(PROJECT_NAME)
DEPEND_DATA=$(patsubst $(ROOT_DIR)/data/$(PROJECT_NAME)/%,$(ROOT_DIR)/debug/$(PROJECT_NAME)/%,$(wildcard $(ROOT_DIR)/data/$(PROJECT_NAME)/*))

LIB_OPTS=-L$(ROOT_DIR)/bin -l$(LIB_NAME)
DEBUG_LIB_OPTS=-L$(ROOT_DIR)/bin/debug -l$(LIB_NAME)
PROF_LIB_OPTS=-L$(ROOT_DIR)/bin/prof -l$(LIB_NAME)

build: $(TARGET)
	
debug_build: $(DEBUG_TARGET)

prof_build: $(PROF_TARGET)

run: build $(DEPEND_DATA)
	@mkdir -p $(ROOT_DIR)/debug/$(PROJECT_NAME)
	@(cd $(ROOT_DIR)/debug/$(PROJECT_NAME) && $(ROOT_DIR)/bin/$(PROJECT_NAME) $(ARGS))

prof_run: prof_build $(DEPEND_DATA)
	@mkdir -p $(ROOT_DIR)/debug/$(PROJECT_NAME)
	@(cd $(ROOT_DIR)/debug/$(PROJECT_NAME) && $(ROOT_DIR)/bin/prof/$(PROJECT_NAME) $(ARGS))

$(TARGET): $(OBJS) $(ROOT_DIR)/bin/lib$(LIB_NAME).a
	@$(CXX) -o $@ $(OBJS) $(CXXFLAGS) $(LIB_OPTS)

$(DEBUG_TARGET): $(DEBUG_OBJS) $(ROOT_DIR)/bin/debug/lib$(LIB_NAME).a
	@mkdir -p $(dir $@)
	@$(CXX) -o $@ $(DEBUG_OBJS) $(CXXFLAGS) -g $(DEBUG_LIB_OPTS) -O0

$(PROF_TARGET): $(PROF_OBJS) $(ROOT_DIR)/bin/prof/lib$(LIB_NAME).a
	@$(CXX) -o $@ $(PROF_OBJS) $(CXXFLAGS) -pg $(PROF_LIB_OPTS)

$(OBJS): $(ROOT_DIR)/temp/$(PROJECT_NAME)/%.o: %.cpp
	@mkdir -p $(dir $@)
	@$(CXX) -c $< -o $@ $(CXXFLAGS)

$(DEBUG_OBJS): $(ROOT_DIR)/temp/debug/$(PROJECT_NAME)/%.o: %.cpp
	@mkdir -p $(dir $@)
	@$(CXX) -c $< -o $@ $(CXXFLAGS) -g -O0

$(PROF_OBJS): $(ROOT_DIR)/temp/prof/$(PROJECT_NAME)/%.o: %.cpp
	@mkdir -p $(dir $@)
	@$(CXX) -c $< -o $@ $(CXXFLAGS) -pg

$(ROOT_DIR)/bin/lib$(LIB_NAME).a:
	@$(MAKE) -C $(ROOT_DIR) bin/lib$(LIB_NAME).a

$(ROOT_DIR)/bin/debug/lib$(LIB_NAME).a:
	@$(MAKE) -C $(ROOT_DIR) bin/debug/lib$(LIB_NAME).a

$(ROOT_DIR)/bin/prof/lib$(LIB_NAME).a:
	@$(MAKE) -C $(ROOT_DIR) bin/prof/lib$(LIB_NAME).a

$(DEPEND_DATA): $(ROOT_DIR)/debug/$(PROJECT_NAME)/%: $(ROOT_DIR)/data/$(PROJECT_NAME)/%
	@mkdir -p $(dir $@)
	@cp $< $@

.PHONY: build run $(ROOT_DIR)/bin/lib$(LIB_NAME).a $(ROOT_DIR)/bin/prof/lib$(LIB_NAME).a prof_build prof_run